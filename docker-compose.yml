services:
  agno-api:
    build: .
    container_name: agno_api
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-agno_db}
      - POSTGRES_USER=${POSTGRES_USER:-agno_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-agno_password}
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-agno_user}:${POSTGRES_PASSWORD:-agno_password}@postgres:5432/${POSTGRES_DB:-agno_db}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - QDRANT_URL=${QDRANT_URL}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    ports:
      - "${API_PORT:-8000}:8000"
    networks:
      - agno_network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs

  postgres:
    image: postgres:15-alpine
    container_name: agno_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-agno_db}
      POSTGRES_USER: ${POSTGRES_USER:-agno_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-agno_password}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-md5}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - agno_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-agno_user} -d ${POSTGRES_DB:-agno_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agno_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@agno.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - agno_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  agno_network:
    driver: bridge